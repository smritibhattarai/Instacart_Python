{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1rxTPREC4t2wtGiQEAKyYviNoWHSyOCWU","authorship_tag":"ABX9TyMc2rzaKgTE8UH2iohH5jbr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"xhB1aBWmbiIw","executionInfo":{"status":"ok","timestamp":1698610475362,"user_tz":0,"elapsed":662,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"outputs":[],"source":["# Import Libraries,\n","import pandas as pd\n","import numpy as np\n","import os"]},{"cell_type":"code","source":["# Defining path collab,\n","path = r'/content/drive/MyDrive/Pythondataanalytics/Instacartanalysis'"],"metadata":{"id":"MmMRQEidb20u","executionInfo":{"status":"ok","timestamp":1698610475364,"user_tz":0,"elapsed":36,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Import ords_prods_merged,\n","df_ords_prods_merged =  pd.read_pickle(os.path.join(path, '2) Data', 'Prepared data','orders_products_merged.pkl'))"],"metadata":{"id":"cyagtN0scaGd","executionInfo":{"status":"ok","timestamp":1698610488709,"user_tz":0,"elapsed":1752,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Create subset of first 1M rows,\n","df = df_ords_prods_merged[:1000000]"],"metadata":{"id":"QIK0UxE3ciac","executionInfo":{"status":"ok","timestamp":1698610497961,"user_tz":0,"elapsed":483,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Check shape,\n","df.shape"],"metadata":{"id":"eMn9iY4jcmdY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610500188,"user_tz":0,"elapsed":14,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"132fd535-bc77-4cad-8122-10780c6e0e67"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(999993, 15)"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## Using If Statements"],"metadata":{"id":"XqHV1DMjctVK"}},{"cell_type":"code","source":["#Define price label function,\n","def price_label(row):\n"," if row['prices'] <= 5:\n","  return 'Low-range product'\n"," elif (row['prices'] > 5) and (row['prices'] <= 15):\n","  return 'Mid-range product'\n"," elif row['prices'] > 15:\n","  return 'High range'\n"," else: return 'Not enough data'"],"metadata":{"id":"Ue6DIGIicrPS","executionInfo":{"status":"ok","timestamp":1698610641858,"user_tz":0,"elapsed":12,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Apply price label on dataframe,\n","df['price_range'] = df.apply(price_label, axis=1)"],"metadata":{"id":"YwYOKJ33dKHK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610655954,"user_tz":0,"elapsed":12392,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"2eaefa26-ba23-42e4-82bb-5a2bcf7ab564"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-41eb268a6c28>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['price_range'] = df.apply(price_label, axis=1)\n"]}]},{"cell_type":"code","source":["df['price_range'].value_counts(dropna = False)"],"metadata":{"id":"T5JM7hIhdPbY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610657983,"user_tz":0,"elapsed":318,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"a861695b-f0b9-4630-dc63-d5ba4dca8c62"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Mid-range product    676502\n","Low-range product    310796\n","High range            12695\n","Name: price_range, dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Check max price to confirm,\n","df['prices'].max()"],"metadata":{"id":"hM3SDQevdSnB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610660160,"user_tz":0,"elapsed":243,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"c8631039-b4dc-4778-bb96-8303bb5619dc"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["99999.0"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["## If-Statements with the loc() Function"],"metadata":{"id":"1p9ZsMH0dXHY"}},{"cell_type":"code","source":["df.loc[df['prices'] > 15, 'price_range_loc'] = 'High-range product'"],"metadata":{"id":"HuB7-qPTdaFX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610665792,"user_tz":0,"elapsed":420,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"b370a147-bac1-4343-f546-3220dbc88b8f"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-fc7ad2a718ba>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df.loc[df['prices'] > 15, 'price_range_loc'] = 'High-range product'\n"]}]},{"cell_type":"code","source":["df.loc[(df['prices'] <= 15) & (df['prices'] > 5), 'price_range_loc'] = 'Mid-range product'"],"metadata":{"id":"AzWOM-7hddZx","executionInfo":{"status":"ok","timestamp":1698610667837,"user_tz":0,"elapsed":9,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df.loc[df['prices'] <= 5, 'price_range_loc'] = 'Low-range product'"],"metadata":{"id":"J4-ucuDodeSP","executionInfo":{"status":"ok","timestamp":1698610669287,"user_tz":0,"elapsed":9,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Check value counts,\n","df['price_range_loc'].value_counts(dropna = False)"],"metadata":{"id":"TLIMb1I5djyl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610670560,"user_tz":0,"elapsed":10,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"0641edb5-be93-4865-9a58-999d0e8c1386"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Mid-range product     676502\n","Low-range product     310796\n","High-range product     12695\n","Name: price_range_loc, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# Repeat process on entire dataframe,\n","df_ords_prods_merged.loc[df_ords_prods_merged['prices'] > 15, ' price_range_loc'] = 'High-range product'"],"metadata":{"id":"9WfeoqX_dn-u","executionInfo":{"status":"ok","timestamp":1698610673556,"user_tz":0,"elapsed":5,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df_ords_prods_merged.loc[(df_ords_prods_merged['prices'] <= 15) & (df_ords_prods_merged['prices'] > 5), 'price_range_loc'] = 'Mid-range product'"],"metadata":{"id":"lxnteiQNds_t","executionInfo":{"status":"ok","timestamp":1698610675177,"user_tz":0,"elapsed":381,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["df_ords_prods_merged.loc[df_ords_prods_merged['prices'] < 5, 'price_range_loc'] = \"Low-range product\""],"metadata":{"id":"JpvMcm6qdxtO","executionInfo":{"status":"ok","timestamp":1698610789003,"user_tz":0,"elapsed":264,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["# Check value counts,\n","df_ords_prods_merged['price_range_loc'].value_counts(dropna = False)"],"metadata":{"id":"fmd5IIk1d0rB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610790678,"user_tz":0,"elapsed":588,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"f92e2774-ff2a-4a3a-f96b-b7c4275f4b00"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Mid-range product    676502\n","Low-range product    303964\n","NaN                   19527\n","Name: price_range_loc, dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["## If-Statements with For-loops"],"metadata":{"id":"DbJUnFthd4YD"}},{"cell_type":"code","source":["# Create new column in dataframe,\n","df_ords_prods_merged['orders_day_of_week'].value_counts(dropna = False)"],"metadata":{"id":"901vUFZkd5b5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610793711,"user_tz":0,"elapsed":12,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"b65dd17c-3c3a-498e-9f9a-f8e7ba62dd47"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    191551\n","1    174957\n","6    138540\n","2    130526\n","5    129636\n","3    118212\n","4    116571\n","Name: orders_day_of_week, dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Set loop,\n","result = []\n","for value in df_ords_prods_merged[\"orders_day_of_week\"]:\n","  if value == 0:\n","   result.append(\"Busiest day\")\n","  elif value == 4:\n","   result.append(\"Least busy\")\n","  else:\n","   result.append(\"Regularly busy\")"],"metadata":{"id":"gdxJQ5nnd-_Z","executionInfo":{"status":"ok","timestamp":1698610900037,"user_tz":0,"elapsed":586,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["\"result\""],"metadata":{"id":"3bcjgTeueZAT","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1698610904834,"user_tz":0,"elapsed":259,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"e69c6e02-2785-43d2-9eed-f991d6b0fb13"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'result'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# Add result to dataframe,\n","df_ords_prods_merged['busiest_day'] = result"],"metadata":{"id":"MF46ZZCreZld","executionInfo":{"status":"ok","timestamp":1698610909863,"user_tz":0,"elapsed":283,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# Check value counts,\n","df_ords_prods_merged['busiest_day'].value_counts(dropna = False)"],"metadata":{"id":"imwsyLruegjn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698610911093,"user_tz":0,"elapsed":13,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"033bc8ef-837e-43ac-a6a2-2bb813461445"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Regularly busy    691871\n","Busiest day       191551\n","Least busy        116571\n","Name: busiest_day, dtype: int64"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["# Task Step 2 - new column for busiest days"],"metadata":{"id":"3DwaH2gPelCu"}},{"cell_type":"code","source":["# Create new if-statement for-loop for new requirements,\n","result_v2 = []\n","for value in df_ords_prods_merged[\"orders_day_of_week\"]:\n"," if value == 0 or value == 1:\n","  result_v2.append(\"Busiest days\")\n"," elif value == 4 or value == 3:\n","  result_v2.append(\"Least busy days\")\n"," else:\n","  result_v2.append(\"Regularly busy\")"],"metadata":{"id":"vZNfZ0Zuelps","executionInfo":{"status":"ok","timestamp":1698611211526,"user_tz":0,"elapsed":649,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["# Add result to dataframe in new column,\n","df_ords_prods_merged['busiest_days'] = result_v2"],"metadata":{"id":"N390AoQBe20h","executionInfo":{"status":"ok","timestamp":1698611218539,"user_tz":0,"elapsed":389,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["# Check,\n","df_ords_prods_merged.head()"],"metadata":{"id":"J1ikNCf3e9g8","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1698611219784,"user_tz":0,"elapsed":425,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"a6f75229-7ef5-41bf-a7b8-15081e3d93fc"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n","0    198637   175298    prior             9                   0   \n","1      9357     6501    prior            22                   6   \n","2   1599735   180044    prior             9                   6   \n","3    227255    12074    prior            26                   4   \n","4   1675773   192641    prior            11                   0   \n","\n","   order_hour_of_day  days_since_last_order  product_id  add_to_cart_order  \\\n","0                 16                    3.0       39812                 23   \n","1                 21                   21.0       39812                  7   \n","2                 13                   22.0       39812                  4   \n","3                 23                    3.0       39812                 23   \n","4                 12                   30.0       39812                  1   \n","\n","   reordered   product_name  aisle_id  department_id  prices _merge  \\\n","0          0  Organic Thyme        16              4     3.7   both   \n","1          1  Organic Thyme        16              4     3.7   both   \n","2          0  Organic Thyme        16              4     3.7   both   \n","3          1  Organic Thyme        16              4     3.7   both   \n","4          1  Organic Thyme        16              4     3.7   both   \n","\n","   price_range_loc    price_range_loc     busiest_day     busiest_days  \n","0              NaN  Low-range product     Busiest day     Busiest days  \n","1              NaN  Low-range product  Regularly busy   Regularly busy  \n","2              NaN  Low-range product  Regularly busy   Regularly busy  \n","3              NaN  Low-range product      Least busy  Least busy days  \n","4              NaN  Low-range product     Busiest day     Busiest days  "],"text/html":["\n","  <div id=\"df-1650ac74-c2b4-401b-9e33-348ae8f7bcca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>orders_day_of_week</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_last_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","      <th>prices</th>\n","      <th>_merge</th>\n","      <th>price_range_loc</th>\n","      <th>price_range_loc</th>\n","      <th>busiest_day</th>\n","      <th>busiest_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>198637</td>\n","      <td>175298</td>\n","      <td>prior</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>3.0</td>\n","      <td>39812</td>\n","      <td>23</td>\n","      <td>0</td>\n","      <td>Organic Thyme</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>3.7</td>\n","      <td>both</td>\n","      <td>NaN</td>\n","      <td>Low-range product</td>\n","      <td>Busiest day</td>\n","      <td>Busiest days</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9357</td>\n","      <td>6501</td>\n","      <td>prior</td>\n","      <td>22</td>\n","      <td>6</td>\n","      <td>21</td>\n","      <td>21.0</td>\n","      <td>39812</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>Organic Thyme</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>3.7</td>\n","      <td>both</td>\n","      <td>NaN</td>\n","      <td>Low-range product</td>\n","      <td>Regularly busy</td>\n","      <td>Regularly busy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1599735</td>\n","      <td>180044</td>\n","      <td>prior</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>22.0</td>\n","      <td>39812</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Organic Thyme</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>3.7</td>\n","      <td>both</td>\n","      <td>NaN</td>\n","      <td>Low-range product</td>\n","      <td>Regularly busy</td>\n","      <td>Regularly busy</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>227255</td>\n","      <td>12074</td>\n","      <td>prior</td>\n","      <td>26</td>\n","      <td>4</td>\n","      <td>23</td>\n","      <td>3.0</td>\n","      <td>39812</td>\n","      <td>23</td>\n","      <td>1</td>\n","      <td>Organic Thyme</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>3.7</td>\n","      <td>both</td>\n","      <td>NaN</td>\n","      <td>Low-range product</td>\n","      <td>Least busy</td>\n","      <td>Least busy days</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1675773</td>\n","      <td>192641</td>\n","      <td>prior</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>30.0</td>\n","      <td>39812</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Organic Thyme</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>3.7</td>\n","      <td>both</td>\n","      <td>NaN</td>\n","      <td>Low-range product</td>\n","      <td>Busiest day</td>\n","      <td>Busiest days</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1650ac74-c2b4-401b-9e33-348ae8f7bcca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1650ac74-c2b4-401b-9e33-348ae8f7bcca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1650ac74-c2b4-401b-9e33-348ae8f7bcca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-95d93948-cfd7-4996-abe4-4126f7ca54a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95d93948-cfd7-4996-abe4-4126f7ca54a6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-95d93948-cfd7-4996-abe4-4126f7ca54a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["# Task Step 3 - values of busiest_days column"],"metadata":{"id":"SmMKEgAmfCKi"}},{"cell_type":"code","source":["df_ords_prods_merged['busiest_days'].value_counts(dropna = False)"],"metadata":{"id":"hVUlAzd4fCyu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698611222463,"user_tz":0,"elapsed":12,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"bd26eea1-1fa5-47f8-8e99-dc017f04c50e"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Regularly busy     398702\n","Busiest days       366508\n","Least busy days    234783\n","Name: busiest_days, dtype: int64"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["##### When checked with our original frequency counts, these values add up to the sums of each \\\"grouping\\\". ie - the total for busiest days equals the sum of value 0 and value 1, and the values for least busy days adds to the sum of value 3 and 4, confirming that the loop operated correctly"],"metadata":{"id":"0e6SH4AlfK3t"}},{"cell_type":"markdown","source":["# Task Step 4 - busiest period of the day column"],"metadata":{"id":"vTgbG7YtfQvA"}},{"cell_type":"code","source":["# Check frequency of values in the \\\"order_hour_of_day\\\" column,\n","df_ords_prods_merged['order_hour_of_day'].value_counts()"],"metadata":{"id":"GBIza81CfNxI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698611225535,"user_tz":0,"elapsed":22,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"70f6c00c-d711-4103-9e7d-5edcadb1091a"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11    84894\n","10    84869\n","14    83784\n","15    82147\n","13    82069\n","12    80497\n","16    77938\n","9     75322\n","17    64802\n","8     52875\n","18    50519\n","19    38784\n","20    30082\n","7     27483\n","21    24498\n","22    19567\n","23    12597\n","6      8909\n","0      6646\n","1      3638\n","5      2724\n","2      2137\n","4      1679\n","3      1533\n","Name: order_hour_of_day, dtype: int64"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["##### As the client wants these grouped into three different segments, we can group the 24 hours of the day as follows: Most orders = 10, 11, 14, 15, 13, 12, 16, 9; Average orders = 17, 8, 18, 19, 20, 7, 21, 22; Fewest orders = 23, 6, 0, 1, 5, 2, 4, 3"],"metadata":{"id":"S6FL2Ji4fX0i"}},{"cell_type":"code","source":["# Create a for-loop if statement using the above breakdown,\n","hour_of_day = []\n","for value in df_ords_prods_merged[\"order_hour_of_day\"]:\n"," if value in [10, 11, 14, 15, 13, 12, 16, 9]:\n","  hour_of_day.append(\"Most orders\")\n"," elif value in [23, 6, 0, 1, 5, 2, 4, 3]:\n","  hour_of_day.append(\"Fewest orders\")\n"," else:\n","  hour_of_day.append(\"Average orders\")"],"metadata":{"id":"EdTePL2sfbcQ","executionInfo":{"status":"ok","timestamp":1698611280387,"user_tz":0,"elapsed":822,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["# Add result to dataframe as \"busiest_period_of_day\" column,\n","df_ords_prods_merged['busiest_period_of_day'] = hour_of_day"],"metadata":{"id":"xu3vXirYfrl9","executionInfo":{"status":"ok","timestamp":1698611318520,"user_tz":0,"elapsed":250,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["# Check,\n","df_ords_prods_merged[['order_hour_of_day', 'busiest_period_of_day']].head(10)"],"metadata":{"id":"9cm4Yy9Efxd8","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1698611323629,"user_tz":0,"elapsed":234,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"092d9481-fad8-4529-db2c-1d6b112bf4e7"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   order_hour_of_day busiest_period_of_day\n","0                 16           Most orders\n","1                 21        Average orders\n","2                 13           Most orders\n","3                 23         Fewest orders\n","4                 12           Most orders\n","5                 22        Average orders\n","6                 15           Most orders\n","7                 19        Average orders\n","8                 19        Average orders\n","9                 14           Most orders"],"text/html":["\n","  <div id=\"df-bffe82ed-e2ba-45fd-9541-50fa26017b1e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_hour_of_day</th>\n","      <th>busiest_period_of_day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16</td>\n","      <td>Most orders</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21</td>\n","      <td>Average orders</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13</td>\n","      <td>Most orders</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>Fewest orders</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","      <td>Most orders</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>22</td>\n","      <td>Average orders</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>15</td>\n","      <td>Most orders</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>19</td>\n","      <td>Average orders</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>19</td>\n","      <td>Average orders</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>14</td>\n","      <td>Most orders</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bffe82ed-e2ba-45fd-9541-50fa26017b1e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bffe82ed-e2ba-45fd-9541-50fa26017b1e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bffe82ed-e2ba-45fd-9541-50fa26017b1e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30971079-2539-4add-8495-20f60de1d9d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30971079-2539-4add-8495-20f60de1d9d9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30971079-2539-4add-8495-20f60de1d9d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["# Task Step 5 - Print Frequency"],"metadata":{"id":"PBcZ9k8xf1C8"}},{"cell_type":"code","source":["df_ords_prods_merged['busiest_period_of_day'].value_counts()"],"metadata":{"id":"GaKBS5A_f39c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698611327503,"user_tz":0,"elapsed":334,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}},"outputId":"ac608fa0-06a6-46fc-86a8-4b03b5418d62"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Most orders       651520\n","Average orders    308610\n","Fewest orders      39863\n","Name: busiest_period_of_day, dtype: int64"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["##### These frequencies match the sums of the above \\\"ungrouped\\\" frequencies, confirming the correct application of the labels"],"metadata":{"id":"ZFl4YUjff8BQ"}},{"cell_type":"markdown","source":["# Export as pickle file"],"metadata":{"id":"KUF9YFt8f-OU"}},{"cell_type":"code","source":["df_ords_prods_merged.to_pickle(os.path.join(path, '2) Data','Prepared data', 'orders_products_merged_updated.pkl'))"],"metadata":{"id":"xWfY7u8xgAOY","executionInfo":{"status":"ok","timestamp":1698611342410,"user_tz":0,"elapsed":995,"user":{"displayName":"samriti Kumar","userId":"01627422454520552458"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"IpEHNAsKH_5f"},"execution_count":null,"outputs":[]}]}